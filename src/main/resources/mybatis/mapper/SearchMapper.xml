<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.flab.fkream.search.SearchMapper">

  <select id="searchAll" resultType="com.flab.fkream.search.SearchItemDto">
    select item.id        as itemId,
           item.item_name as itemName,
           BR.id          as brandId,
           BR.brand_name  as brandName,
           isp.lsp           as price,
           deal.deal_count   as sortCriteria,
           img.id         as itemImgId,
           img.img_name   as imgName,
           img.img_url    as imgUrl
    from ITEM item
    join ITEM_IMG img on item.ID = img.ITEM_ID
    join BRAND BR on item.BRAND_ID = BR.id
    join (select ITEM_ID, min(LOWEST_SELLING_PRICE) lsp
          from ITEM_SIZE_PRICE
          group by ITEM_ID) isp on item.ID = isp.ITEM_ID
    left join (select ITEM_ID, count(*) deal_count
               from DEAL
               group by ITEM_ID) deal on item.ID = deal.ITEM_ID
    where IS_REPRESENTATIVE_IMG = true
    order by deal.deal_count DESC
  </select>

  <select id="findAllCount" resultType="java.lang.Integer">
    select count(*)
    from ITEM item
           join BRAND BR on item.BRAND_ID = BR.id
  </select>

  <select id="autoComplete" resultType="com.flab.fkream.search.AutoCompletedItemDto">
    select item.id as itemId,
           item.item_name as itemName,
           img.id as itemImgId,
           img.img_name as imgName,
           img.img_url as imgUrl
    from ITEM item
    join ITEM_IMG img on item.ID = img.ITEM_ID
    <where>
    <foreach collection="arg0" item="name">
      or item.item_name like '%' || #{name} || '%'
    </foreach>
    </where>
    limit 10
  </select>

  <select id="searchByCriteria" resultType="com.flab.fkream.search.SearchItemDto" parameterType="com.flab.fkream.search.SearchCriteria">
    select 
        item.id        as itemId,
        item.item_name as itemName,
        BR.id          as brandId,
        BR.brand_name  as brandName,
    <choose>
      <when test="sort == null or sort.name =='POPULAR'">
        isp.lsp           as price,
        deal.deal_count   as sortCriteria,
      </when>
      <when test="sort != null and sort.name =='PREMIUM_DESC'">
        isp.lsp           as price,
        ROUND(CAST((isp.lsp - item.released_price) as DOUBLE)/CAST(item.released_price as DOUBLE)*100, 1) as sortCriteria,
      </when>
      <when test="sort != null and sort.name =='PREMIUM_ASC'">
        isp.lsp           as price,
        ROUND(CAST((isp.lsp - item.released_price) as DOUBLE)/CAST(item.released_price as DOUBLE)*100, 1) as sortCriteria,
      </when>
      <when test="sort != null and sort.name =='LOWEST_SELLING_PRICE'">
        isp.lsp           as price,
      </when>
      <when test="sort != null and sort.name =='HIGHEST_PURCHASE_PRICE'">
        ispSorted.hpp     as price,
      </when>
      <when test="sort != null and sort.name == 'RELEASE_DATE'">
        isp.lsp        as price,
        item.release_date   as sortCriteria,
      </when>
    </choose>
        img.id         as itemImgId,
        img.img_name   as imgName,
        img.img_url    as imgUrl
    from ITEM item
        join ITEM_IMG img on item.ID = img.ITEM_ID
        join BRAND BR on item.BRAND_ID = BR.id
    <if test="size != null">
        join item_size_price as item_size on item.id = item_size.item_id
    </if>
    <choose>
      <when test="sort != null and sort.name =='HIGHEST_PURCHASE_PRICE'">
        join (select ITEM_ID, max(HIGHEST_PURCHASE_PRICE) hpp
        from ITEM_SIZE_PRICE
        group by ITEM_ID) ispSorted on item.ID = ispSorted.ITEM_ID
      </when>
      <otherwise>
        join (select ITEM_ID, min(LOWEST_SELLING_PRICE) lsp
        from ITEM_SIZE_PRICE
        group by ITEM_ID) isp on item.ID = isp.ITEM_ID
      </otherwise>
    </choose>
    <choose>
      <when test="sort == null or sort.name =='POPULAR'">
        left join (select ITEM_ID, count(*) as deal_count
        from DEAL
        group by ITEM_ID) deal on item.ID = deal.ITEM_ID
      </when>
    </choose>
    <where>
      <if test="context != null">
        (item.item_name like '%' || #{context} || '%'
        or item.model_number like '%' || #{context} || '%'
        or BR.brand_name like '%' || #{context} || '%')
      </if>
      <if test="categoryId != null">
        and (item.category_id in
        <foreach collection="categoryId" item="category_id" open="(" close=")" separator=",">
          #{category_id}
        </foreach>
        or
        item.detailed_category_id in
        <foreach collection="categoryId" item="category_id" open="(" close=")" separator=",">
          #{category_id}
        </foreach>)
      </if>
      <if test="gender != null">
        and item.gender = #{gender}
      </if>
      <if test="brandId != null">
        and BR.id = #{brandId}
      </if>
      <if test="size != null">
        and item_size.size = #{size}
      </if>
      <if test="minPrice != null and maxPrice != null">
        and #{maxPrice} >= isp.lsp
        and isp.lsp >= #{minPrice}
      </if>
      and IS_REPRESENTATIVE_IMG = true
    </where>
    <choose>
      <when test="sort == null or sort.name =='POPULAR'">
        order by deal.deal_count DESC
      </when>
      <when test="sort != null and sort.name =='PREMIUM_DESC'">
        order by ROUND(CAST((isp.lsp - item.released_price) as DOUBLE)/CAST(item.released_price as DOUBLE)*100, 1) DESC
      </when>
      <when test="sort != null and sort.name =='PREMIUM_ASC'">
        order by ROUND(CAST((isp.lsp - item.released_price) as DOUBLE)/CAST(item.released_price as DOUBLE)*100, 1)
      </when>
      <when test="sort != null and sort.name =='LOWEST_SELLING_PRICE'">
        order by isp.lsp
      </when>
      <when test="sort != null and sort.name =='HIGHEST_PURCHASE_PRICE'">
        order by ispSorted.hpp DESC
      </when>
      <when test="sort != null and sort.name =='RELEASE_DATE'">
        order by item.release_date DESC
      </when>
    </choose>
  </select>

  <select id="findCountByCriteria" resultType="java.lang.Integer" parameterType="com.flab.fkream.search.SearchCriteria">
    select count(*)
    from ITEM item
        join BRAND BR on item.BRAND_ID = BR.id
        <if test="size != null">
          join item_size_price as item_size on item.id = item_size.item_id
        </if>
        join (select ITEM_ID, min(LOWEST_SELLING_PRICE) lsp
              from ITEM_SIZE_PRICE
              group by ITEM_ID) isp on item.ID = isp.ITEM_ID
    <where>
      <if test="context != null">
        (item.item_name like '%' || #{context} || '%'
        or item.model_number like '%' || #{context} || '%'
        or BR.brand_name like '%' || #{context} || '%')
      </if>
      <if test="categoryId != null">
        and (item.category_id in
        <foreach collection="categoryId" item="category_id" open="(" close=")" separator=",">
          #{category_id}
        </foreach>
        or
        item.detailed_category_id in
        <foreach collection="categoryId" item="category_id" open="(" close=")" separator=",">
          #{category_id}
        </foreach>)
      </if>
      <if test="gender != null">
        and item.gender = #{gender}
      </if>
      <if test="brandId != null">
        and BR.id = #{brandId}
      </if>
      <if test="size != null">
        and item_size.size = #{size}
      </if>
      <if test="minPrice != null and maxPrice != null">
        and #{maxPrice} >= isp.lsp
        and isp.lsp >= #{minPrice}
      </if>
    </where>
  </select>

</mapper>